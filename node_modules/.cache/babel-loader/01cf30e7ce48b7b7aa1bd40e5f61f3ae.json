{"ast":null,"code":"var _jsxFileName = \"/home/sneha/PTT-CLI/src/components/functional/event/EventCreationComponent.js\";\nimport React from 'react';\nimport { MuiGrid, MuiTextField, MuiMenuItem, MuiButton } from '../../../ui';\nimport WithAppShell from '../../hoc/withAppShell/WithAppShell';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\nimport moment from 'moment';\nimport * as EventActions from '../../../actions/EventActions';\nimport { Redirect } from 'react-router-dom';\nimport routes from '../../../navigation/Routes';\nimport * as ClientActions from '../../../actions/ClientActions';\nexport default class EventCreationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateChange = event => {\n      let date = moment(event).format('ddd MMM Do');\n      this.setState({\n        date: date\n      });\n      this.setState({\n        showDate: event.target.value\n      });\n    };\n\n    this.handleWorkoutNotes = event => {\n      console.log(\"notes\", event.target.value);\n      this.setState({\n        notes: event.target.value\n      });\n    };\n\n    this.setCalendarEvent = time => {\n      console.log(\"time\", time);\n    };\n\n    this.handleTimeChange = event => {\n      // let time=event.toISOString().getUTCHours();\n      console.log(\"time\", event.getHours(), event.getMinutes());\n      let hours = event.getHours();\n      let meridian = '';\n\n      if (hours >= 12) {\n        meridian = 'PM';\n      } else {\n        meridian = 'AM';\n      }\n\n      let minutes = event.getMinutes();\n      console.log(\"hours++minutes++meridian0\", hours + \":\" + minutes + \" \" + meridian);\n      this.setState({\n        showTime: event\n      });\n      let time = hours + \":\" + minutes + \" \" + meridian;\n      this.setState({\n        time: time\n      });\n    };\n\n    this.handleWorkoutName = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.handleSubmit = async () => {\n      let response = await EventActions.createEvents(this.state);\n      console.log(\"response\", response);\n\n      if (response.status == 200) {\n        this.setState({\n          routeToList: true\n        });\n      }\n    };\n\n    this.handleClient = event => {\n      this.setState({\n        client: event.target.value\n      });\n    };\n\n    this.setClients = async () => {\n      let clients = await ClientActions.getAllClients();\n      this.setState({\n        clients: clients\n      });\n      console.log(\"clients\", clients);\n    };\n\n    this.routetoList = () => {\n      this.setState({\n        routeToList: true\n      });\n    };\n\n    this.state = {\n      notes: '',\n      name: '',\n      date: '',\n      showTime: new Date(),\n      showDate: '',\n      client: '',\n      time: moment().format('LT'),\n      clients: []\n    };\n  }\n\n  componentDidMount() {\n    this.setClients();\n  }\n\n  render() {\n    const d = new Date();\n    const month = new Date().getMonth() + 1;\n    const date = d.getFullYear() + '-' + month + '-' + d.getUTCDate();\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, this.state.routeToList ? /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: routes.eventList\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 43\n      }\n    }) : /*#__PURE__*/React.createElement(WithAppShell, {\n      showBackArrowIcon: true,\n      onClickOfBackArrow: this.routetoList,\n      title: \"Add Events\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      style: {\n        padding: 20\n      },\n      container: true,\n      justify: \"space-between\",\n      spacing: 2,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MuiTextField, {\n      id: \"outlined-select-currency\",\n      select: true,\n      label: \"Client\",\n      defaultValue: this.state.clients,\n      variant: \"outlined\",\n      value: this.state.client,\n      style: {\n        background: 'white',\n        width: 320\n      },\n      onChange: this.handleClient,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, this.state.clients != undefined && this.state.clients.map(option => /*#__PURE__*/React.createElement(MuiMenuItem, {\n      key: option.id,\n      value: option.firstName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, option.firstName)))), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MuiTextField, {\n      label: \"Workout Name\",\n      style: {\n        width: 320\n      },\n      variant: \"outlined\",\n      onChange: this.handleWorkoutName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MuiTextField, {\n      label: \"Workout Notes\",\n      multiline: true,\n      rows: 4,\n      variant: \"outlined\",\n      style: {\n        width: 320\n      },\n      onChange: this.handleWorkoutNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MuiTextField, {\n      style: {\n        width: 320\n      },\n      onChange: event => {\n        this.handleDateChange(event);\n      },\n      id: \"date\",\n      label: \"Date\",\n      type: \"date\",\n      defaultValue: date,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardTimePicker, {\n      margin: \"normal\",\n      id: \"time-picker\",\n      label: \"Time\" // defaultValue={new Date()}\n      ,\n      value: new Date(this.state.showTime),\n      style: {\n        width: 320\n      },\n      onChange: event => this.handleTimeChange(event),\n      KeyboardButtonProps: {\n        'aria-label': 'change time'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MuiButton, {\n      style: {\n        backgroundColor: \"#4caf50\",\n        width: 320\n      },\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, \"SAVE\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/sneha/PTT-CLI/src/components/functional/event/EventCreationComponent.js"],"names":["React","MuiGrid","MuiTextField","MuiMenuItem","MuiButton","WithAppShell","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","moment","EventActions","Redirect","routes","ClientActions","EventCreationComponent","Component","constructor","props","handleDateChange","event","date","format","setState","showDate","target","value","handleWorkoutNotes","console","log","notes","setCalendarEvent","time","handleTimeChange","getHours","getMinutes","hours","meridian","minutes","showTime","handleWorkoutName","name","handleSubmit","response","createEvents","state","status","routeToList","handleClient","client","setClients","clients","getAllClients","routetoList","Date","componentDidMount","render","d","month","getMonth","getFullYear","getUTCDate","pathname","eventList","padding","background","width","undefined","map","option","id","firstName","shrink","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,WAAhC,EAA6CC,SAA7C,QAA8D,aAA9D;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SACEC,uBADF,EAEEC,kBAFF,QAGO,sBAHP;AAIA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,YAAZ,MAA8B,+BAA9B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,KAAMC,aAAb,MAAgC,gCAAhC;AACA,eAAe,MAAMC,sBAAN,SAAqCd,KAAK,CAACe,SAA3C,CAAqD;AAClEC,EAAAA,WAAW,CAACC,KAAD,EACX;AACE,UAAMA,KAAN;;AADF,SAcAC,gBAdA,GAckBC,KAAD,IAAS;AACxB,UAAIC,IAAI,GAACX,MAAM,CAACU,KAAD,CAAN,CAAcE,MAAd,CAAqB,YAArB,CAAT;AACJ,WAAKC,QAAL,CAAc;AAACF,QAAAA,IAAI,EAACA;AAAN,OAAd;AACA,WAAKE,QAAL,CAAc;AAACC,QAAAA,QAAQ,EAACJ,KAAK,CAACK,MAAN,CAAaC;AAAvB,OAAd;AAEG,KAnBD;;AAAA,SAoBAC,kBApBA,GAoBoBP,KAAD,IAAS;AAC1BQ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBT,KAAK,CAACK,MAAN,CAAaC,KAAjC;AAEJ,WAAKH,QAAL,CAAc;AAACO,QAAAA,KAAK,EAACV,KAAK,CAACK,MAAN,CAAaC;AAApB,OAAd;AAEG,KAzBD;;AAAA,SA0BAK,gBA1BA,GA0BkBC,IAAD,IAAQ;AACvBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBG,IAAnB;AACD,KA5BD;;AAAA,SA8BAC,gBA9BA,GA8BkBb,KAAD,IAAS;AACxB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBT,KAAK,CAACc,QAAN,EAAnB,EAAoCd,KAAK,CAACe,UAAN,EAApC;AACA,UAAIC,KAAK,GAAChB,KAAK,CAACc,QAAN,EAAV;AACA,UAAIG,QAAQ,GAAC,EAAb;;AACA,UAAGD,KAAK,IAAE,EAAV,EACA;AACEC,QAAAA,QAAQ,GAAC,IAAT;AACD,OAHD,MAKA;AACEA,QAAAA,QAAQ,GAAC,IAAT;AACD;;AAEH,UAAIC,OAAO,GAAClB,KAAK,CAACe,UAAN,EAAZ;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCO,KAAK,GAAC,GAAN,GAAUE,OAAV,GAAkB,GAAlB,GAAsBD,QAA9D;AACA,WAAKd,QAAL,CAAc;AAACgB,QAAAA,QAAQ,EAACnB;AAAV,OAAd;AACA,UAAIY,IAAI,GAACI,KAAK,GAAC,GAAN,GAAUE,OAAV,GAAkB,GAAlB,GAAsBD,QAA/B;AACE,WAAKd,QAAL,CAAc;AAACS,QAAAA,IAAI,EAACA;AAAN,OAAd;AAGD,KAnDD;;AAAA,SAoDAQ,iBApDA,GAoDmBpB,KAAD,IAAS;AAC7B,WAAKG,QAAL,CAAc;AAACkB,QAAAA,IAAI,EAACrB,KAAK,CAACK,MAAN,CAAaC;AAAnB,OAAd;AAEG,KAvDD;;AAAA,SAwDAgB,YAxDA,GAwDa,YAAS;AAExB,UAAIC,QAAQ,GAAC,MAAMhC,YAAY,CAACiC,YAAb,CAA0B,KAAKC,KAA/B,CAAnB;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBc,QAAvB;;AACA,UAAGA,QAAQ,CAACG,MAAT,IAAiB,GAApB,EACA;AACE,aAAKvB,QAAL,CAAc;AAACwB,UAAAA,WAAW,EAAC;AAAb,SAAd;AACD;AACE,KAhED;;AAAA,SAiEAC,YAjEA,GAiEc5B,KAAD,IAAS;AACxB,WAAKG,QAAL,CAAc;AAAC0B,QAAAA,MAAM,EAAC7B,KAAK,CAACK,MAAN,CAAaC;AAArB,OAAd;AACG,KAnED;;AAAA,SAoEAwB,UApEA,GAoEW,YAAS;AAClB,UAAIC,OAAO,GAAC,MAAMrC,aAAa,CAACsC,aAAd,EAAlB;AACA,WAAK7B,QAAL,CAAc;AAAC4B,QAAAA,OAAO,EAACA;AAAT,OAAd;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBsB,OAAtB;AACK,KAxEP;;AAAA,SA6EAE,WA7EA,GA6EY,MAAI;AACd,WAAK9B,QAAL,CAAc;AAACwB,QAAAA,WAAW,EAAC;AAAb,OAAd;AACD,KA/ED;;AAEE,SAAKF,KAAL,GAAW;AACVf,MAAAA,KAAK,EAAC,EADI;AAETW,MAAAA,IAAI,EAAC,EAFI;AAGTpB,MAAAA,IAAI,EAAC,EAHI;AAITkB,MAAAA,QAAQ,EAAC,IAAIe,IAAJ,EAJA;AAKT9B,MAAAA,QAAQ,EAAC,EALA;AAMTyB,MAAAA,MAAM,EAAC,EANE;AAOTjB,MAAAA,IAAI,EAACtB,MAAM,GAAGY,MAAT,CAAgB,IAAhB,CAPI;AAQT6B,MAAAA,OAAO,EAAC;AARC,KAAX;AAUD;;AA8DDI,EAAAA,iBAAiB,GAAE;AAClB,SAAKL,UAAL;AACA;;AAIDM,EAAAA,MAAM,GAAG;AAEP,UAAMC,CAAC,GAAC,IAAIH,IAAJ,EAAR;AAEA,UAAMI,KAAK,GAAC,IAAIJ,IAAJ,GAAWK,QAAX,KAAsB,CAAlC;AACA,UAAMtC,IAAI,GAACoC,CAAC,CAACG,WAAF,KAAgB,GAAhB,GAAoBF,KAApB,GAA0B,GAA1B,GAA8BD,CAAC,CAACI,UAAF,EAAzC;AAEA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACW,KAAKhB,KAAL,CAAWE,WAAX,gBAAyB,oBAAC,QAAD;AACtB,MAAA,EAAE,EAAE;AACAe,QAAAA,QAAQ,EAAEjD,MAAM,CAACkD;AADjB,OADkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,gBAIX,oBAAC,YAAD;AAAc,MAAA,iBAAiB,EAAE,IAAjC;AAAuC,MAAA,kBAAkB,EAAE,KAAKV,WAAhE;AACA,MAAA,KAAK,EAAC,YADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEL,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEW,QAAAA,OAAO,EAAE;AAAX,OAAhB;AAAgC,MAAA,SAAS,MAAzC;AAA0C,MAAA,OAAO,EAAC,eAAlD;AAAkE,MAAA,OAAO,EAAE,CAA3E;AAA6E,MAAA,EAAE,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACO,oBAAC,OAAD;AAAS,MAAA,IAAI,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,EAAE,EAAC,0BADL;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,YAAY,EAAE,KAAKnB,KAAL,CAAWM,OAJ3B;AAKE,MAAA,OAAO,EAAC,UALV;AAME,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,MANpB;AAOE,MAAA,KAAK,EAAE;AAAEgB,QAAAA,UAAU,EAAE,OAAd;AAAsBC,QAAAA,KAAK,EAAC;AAA5B,OAPT;AAQE,MAAA,QAAQ,EAAE,KAAKlB,YARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG,KAAKH,KAAL,CAAWM,OAAX,IAAoBgB,SAApB,IAAiC,KAAKtB,KAAL,CAAWM,OAAX,CAAmBiB,GAAnB,CAAwBC,MAAD,iBACvD,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAzB;AAA6B,MAAA,KAAK,EAAED,MAAM,CAACE,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,MAAM,CAACE,SADV,CADgC,CAVpC,CADF,CADP,eAoBO,oBAAC,OAAD;AAAS,MAAA,IAAI,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,cAApB;AAAmC,MAAA,KAAK,EAAE;AAACL,QAAAA,KAAK,EAAC;AAAP,OAA1C;AAAuD,MAAA,OAAO,EAAC,UAA/D;AAA0E,MAAA,QAAQ,EAAE,KAAK1B,iBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApBP,eAyBO,oBAAC,OAAD;AAAS,MAAA,IAAI,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,eAApB;AAAoC,MAAA,SAAS,MAA7C;AACA,MAAA,IAAI,EAAE,CADN;AACS,MAAA,OAAO,EAAC,UADjB;AAC2B,MAAA,KAAK,EAAE;AAAC0B,QAAAA,KAAK,EAAC;AAAP,OADlC;AAC+C,MAAA,QAAQ,EAAE,KAAKvC,kBAD9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzBP,eA+BO,oBAAC,uBAAD;AAAyB,MAAA,KAAK,EAAEpB,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AAAS,MAAA,IAAI,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACC,MAAA,KAAK,EAAE;AAAC2D,QAAAA,KAAK,EAAC;AAAP,OADR;AAEC,MAAA,QAAQ,EAAG9C,KAAD,IAAS;AAAC,aAAKD,gBAAL,CAAsBC,KAAtB;AAA6B,OAFlD;AAGJ,MAAA,EAAE,EAAC,MAHC;AAIJ,MAAA,KAAK,EAAC,MAJF;AAKJ,MAAA,IAAI,EAAC,MALD;AAMJ,MAAA,YAAY,EAAEC,IANV;AAOJ,MAAA,eAAe,EAAE;AACfmD,QAAAA,MAAM,EAAE;AADO,OAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADA,eAcA,oBAAC,OAAD;AAAS,MAAA,IAAI,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,kBAAD;AACE,MAAA,MAAM,EAAC,QADT;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,KAAK,EAAC,MAHR,CAIE;AAJF;AAKE,MAAA,KAAK,EAAE,IAAIlB,IAAJ,CAAS,KAAKT,KAAL,CAAWN,QAApB,CALT;AAME,MAAA,KAAK,EAAE;AAAC2B,QAAAA,KAAK,EAAC;AAAP,OANT;AAOE,MAAA,QAAQ,EAAG9C,KAAD,IAAS,KAAKa,gBAAL,CAAsBb,KAAtB,CAPrB;AAQE,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAdA,CA/BP,eA4DO,oBAAC,OAAD;AAAS,MAAA,IAAI,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACqD,QAAAA,eAAe,EAAC,SAAjB;AAA2BP,QAAAA,KAAK,EAAC;AAAjC,OAAlB;AAAyD,MAAA,OAAO,EAAE,KAAKxB,YAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA5DP,CAFK,CALA,CADF;AA+ED;;AAxKiE","sourcesContent":["import React from 'react'\nimport { MuiGrid, MuiTextField, MuiMenuItem, MuiButton } from '../../../ui'\nimport WithAppShell from '../../hoc/withAppShell/WithAppShell'\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n} from '@material-ui/pickers';\nimport moment from 'moment'\nimport * as EventActions from '../../../actions/EventActions'\nimport {Redirect} from 'react-router-dom'\nimport routes from '../../../navigation/Routes'\nimport * as  ClientActions from '../../../actions/ClientActions'\nexport default class EventCreationComponent extends React.Component {\n  constructor(props)\n  {\n    super(props)\n    this.state={\n     notes:'',\n      name:'',\n      date:'',\n      showTime:new Date(),\n      showDate:'',\n      client:'',\n      time:moment().format('LT'),\n      clients:[]\n    }\n  }\n \n  handleDateChange=(event)=>{\n    let date=moment(event).format('ddd MMM Do');      \nthis.setState({date:date})\nthis.setState({showDate:event.target.value})\n  \n  }\n  handleWorkoutNotes=(event)=>{\n    console.log(\"notes\",event.target.value)\n  \nthis.setState({notes:event.target.value})\n\n  } \n  setCalendarEvent=(time)=>{\n    console.log(\"time\",time)\n  }\n  \n  handleTimeChange=(event)=>{\n    // let time=event.toISOString().getUTCHours();\n    console.log(\"time\",event.getHours(),event.getMinutes())\n    let hours=event.getHours()\n    let meridian=''\n    if(hours>=12)\n    {\n      meridian='PM'\n    }\n    else\n    {\n      meridian='AM'\n    }\n   \n  let minutes=event.getMinutes()\n  console.log(\"hours++minutes++meridian0\",hours+\":\"+minutes+\" \"+meridian)\n  this.setState({showTime:event})\n  let time=hours+\":\"+minutes+\" \"+meridian\n    this.setState({time:time})\n   \n    \n  }\n  handleWorkoutName=(event)=>{\nthis.setState({name:event.target.value})\n\n  }\n  handleSubmit=async()=>{\n   \nlet response=await EventActions.createEvents(this.state)\nconsole.log(\"response\",response)\nif(response.status==200)\n{\n  this.setState({routeToList:true})\n}\n  }\n  handleClient=(event)=>{\nthis.setState({client:event.target.value})\n  }\n  setClients=async()=>{\n    let clients=await ClientActions.getAllClients()\n    this.setState({clients:clients})\n    console.log(\"clients\",clients)\n        }\n  \n  componentDidMount(){\n   this.setClients()\n  }\n  routetoList=()=>{\n    this.setState({routeToList:true})\n  }\n  render() {\n  \n    const d=new Date()\n   \n    const month=new Date().getMonth()+1\n    const date=d.getFullYear()+'-'+month+'-'+d.getUTCDate()\n    \n    return (\n      <React.Fragment>\n                {this.state.routeToList ? <Redirect\n                    to={{\n                        pathname: routes.eventList\n                    }} /> :\n      <WithAppShell showBackArrowIcon={true} onClickOfBackArrow={this.routetoList}\n      title=\"Add Events\">\n <MuiGrid style={{ padding: 20}} container justify='space-between' spacing={2}xs > \n        <MuiGrid item >\n          <MuiTextField\n            id=\"outlined-select-currency\"\n            select\n            label=\"Client\"\n            defaultValue={this.state.clients}\n            variant=\"outlined\"\n            value={this.state.client}\n            style={{ background: 'white',width:320}}\n            onChange={this.handleClient}\n          >\n            {this.state.clients!=undefined && this.state.clients.map((option) => (\n              <MuiMenuItem key={option.id} value={option.firstName}>\n                {option.firstName}\n              </MuiMenuItem>\n            ))}\n          </MuiTextField>\n        </MuiGrid>\n     \n        <MuiGrid item >\n          <MuiTextField label='Workout Name' style={{width:320}} variant=\"outlined\" onChange={this.handleWorkoutName}>\n            \n          </MuiTextField>\n        </MuiGrid>\n        <MuiGrid item>\n          <MuiTextField label='Workout Notes' multiline\n          rows={4} variant=\"outlined\"style={{width:320}} onChange={this.handleWorkoutNotes}>\n            \n          </MuiTextField>\n        </MuiGrid>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <MuiGrid item >\n        <MuiTextField\n         style={{width:320}}\n         onChange={(event)=>{this.handleDateChange(event)}}\n    id=\"date\"\n    label=\"Date\"\n    type=\"date\"\n    defaultValue={date}\n    InputLabelProps={{\n      shrink: true,\n    }}\n  />\n        </MuiGrid>\n        <MuiGrid item >\n        <KeyboardTimePicker\n          margin=\"normal\"\n          id=\"time-picker\"\n          label=\"Time\"\n          // defaultValue={new Date()}\n          value={new Date(this.state.showTime)}\n          style={{width:320}}\n          onChange={(event)=>this.handleTimeChange(event)}\n          KeyboardButtonProps={{\n            'aria-label': 'change time',\n          }}\n        />\n        </MuiGrid>\n        </MuiPickersUtilsProvider>\n        <MuiGrid item>\n          <MuiButton style={{backgroundColor:\"#4caf50\",width:320}} onClick={this.handleSubmit}>\n            SAVE\n          </MuiButton>\n        </MuiGrid>\n       \n     \n      </MuiGrid>\n      </WithAppShell>}\n   </React.Fragment>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}