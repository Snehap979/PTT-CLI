{"ast":null,"code":"var _jsxFileName = \"/home/sneha/PTT-CLI/src/components/functional/client/AddSessionComponent.js\";\nimport React from 'react';\nimport { MuiGrid, MuiTypography, MuiIcon, MuiDivider, MuiTextField, MuiButton, MuiFab, MuiRadio } from '../../../ui';\nimport AddIcon from '@material-ui/icons/Add';\nimport ClientListComponent from './ClientListComponent';\nimport WithAppShell from '../../hoc/withAppShell/WithAppShell';\nimport { Redirect, Link } from 'react-router-dom';\nimport { routes } from '../../../navigation';\nimport moment from 'moment';\nimport * as SessionActions from '../../../actions/SessionActions';\n\nclass AddSessionComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSessionChange = event => {\n      this.sessions = event.target.value;\n      this.setState({\n        sessions: this.sessions\n      });\n    };\n\n    this.handleChangeAddButton = () => {\n      let tempSessions = this.state.sessions;\n      tempSessions = ++tempSessions;\n      this.setState({\n        sessions: tempSessions\n      });\n    };\n\n    this.routeToClientList = async () => {\n      console.log(\"coming in route\", this.state);\n      let session = {};\n      session.count = this.state.sessionCount;\n      session.price = this.state.price;\n      session.date = this.state.date;\n      session.isPresent = this.state.isPresent;\n      session.clientId = this.state.clientListDetails._id;\n      session.description = this.state.description; //MAKE AN API CALL TO SAVE THE SESSIONS CHANGE\n\n      let response = await SessionActions.createSession(session);\n      console.log(\"response\", response);\n\n      if (response.status == 200) {\n        this.setState({\n          routeToList: true\n        });\n      }\n    };\n\n    this.redirectToClientList = async () => {\n      this.setState({\n        routeToList: true\n      });\n    };\n\n    this.handleAttendanceSelect = (name, event) => {\n      this.setState({\n        attendanceStatus: event.target.value\n      });\n\n      if (event.target.value == 'Present') {\n        let sessionCount = ++this.state.clientListDetails.sessionCount;\n        this.setState({\n          isPresent: true\n        });\n        this.setState({\n          sessionCount: sessionCount\n        });\n      }\n    };\n\n    this.handlePrice = event => {\n      let price = Number(event.target.value);\n      this.setState({\n        price: price\n      });\n    };\n\n    this.handleDescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n    };\n\n    this.state = {\n      // sessions:this.props.completedSessions,\n      routeToList: false,\n      clientListDetails: this.props.location.state.clientDetails != undefined && this.props.location.state.clientDetails,\n      isPresent: false,\n      isAbsent: false,\n      attendanceStatus: '',\n      price: 0,\n      description: '',\n      date: moment().format(\"D MM YYYY\")\n    };\n    this.sessions = 0;\n  }\n\n  componentDidMount() {\n    // this.setState(sessions:this.props.completedSessions)\n    console.log(\"in component did mount\");\n  }\n\n  render() {\n    console.log(\"this.props\", this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, this.state.routeToList ? /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: routes.clientsList\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 43\n      }\n    }) : /*#__PURE__*/React.createElement(WithAppShell, {\n      title: \"Add Session\",\n      showBackArrowIcon: true,\n      onClickOfBackArrow: this.redirectToClientList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      container: true,\n      style: {\n        padding: 8\n      },\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      container: true,\n      style: {},\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MuiTypography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }, \"Client Attendance\")), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MuiRadio, {\n      onChange: event => {\n        this.handleAttendanceSelect('Present', event);\n      },\n      checked: this.state.attendanceStatus == 'Present',\n      style: {\n        color: 'green'\n      },\n      value: \"Present\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MuiTypography, {\n      style: {\n        paddingTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }\n    }, \"Present\"))), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MuiRadio, {\n      onChange: event => {\n        this.handleAttendanceSelect('Absent', event);\n      },\n      checked: this.state.attendanceStatus == 'Absent',\n      value: \"Absent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(MuiTypography, {\n      style: {\n        paddingTop: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, \"Absent\")))), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MuiTypography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, \"Date\")), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MuiTypography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, moment().format(\"D MM YYYY\")))), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MuiTypography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, \"Price\")), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MuiTextField, {\n      id: \"standard-basic\",\n      style: {\n        width: '100%'\n      },\n      onChange: event => {\n        this.handlePrice(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      container: true,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MuiTypography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }, \"Session description\")), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MuiTextField, {\n      onChange: event => {\n        this.handleDescription(event);\n      },\n      style: {\n        width: '100%'\n      },\n      id: \"outlined-textarea\",\n      multiline: true,\n      rows: 7,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(MuiGrid, {\n      item: true,\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MuiButton, {\n      size: \"large\",\n      variant: \"contained\",\n      style: {\n        background: \"#4caf50\",\n        width: '100%',\n        color: \"white\"\n      },\n      onClick: this.routeToClientList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 33\n      }\n    }, \"SAVE\")))));\n  }\n\n}\n\nexport default AddSessionComponent;","map":{"version":3,"sources":["/home/sneha/PTT-CLI/src/components/functional/client/AddSessionComponent.js"],"names":["React","MuiGrid","MuiTypography","MuiIcon","MuiDivider","MuiTextField","MuiButton","MuiFab","MuiRadio","AddIcon","ClientListComponent","WithAppShell","Redirect","Link","routes","moment","SessionActions","AddSessionComponent","Component","constructor","props","handleSessionChange","event","sessions","target","value","setState","handleChangeAddButton","tempSessions","state","routeToClientList","console","log","session","count","sessionCount","price","date","isPresent","clientId","clientListDetails","_id","description","response","createSession","status","routeToList","redirectToClientList","handleAttendanceSelect","name","attendanceStatus","handlePrice","Number","handleDescription","location","clientDetails","undefined","isAbsent","format","componentDidMount","render","pathname","clientsList","padding","color","paddingTop","width","background"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { MuiGrid, MuiTypography, MuiIcon, MuiDivider, MuiTextField, MuiButton, MuiFab, MuiRadio } from '../../../ui'\nimport AddIcon from '@material-ui/icons/Add';\nimport ClientListComponent from './ClientListComponent'\nimport WithAppShell from '../../hoc/withAppShell/WithAppShell'\nimport { Redirect, Link } from 'react-router-dom';\nimport { routes } from '../../../navigation';\nimport moment from 'moment'\nimport * as SessionActions from '../../../actions/SessionActions'\nclass AddSessionComponent extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            // sessions:this.props.completedSessions,\n            routeToList: false,\n            clientListDetails: this.props.location.state.clientDetails!=undefined && this.props.location.state.clientDetails,\n            isPresent: false,\n            isAbsent: false,\n            attendanceStatus: '',\n            price: 0,\n            description: '',\n            date: moment().format(\"D MM YYYY\")\n\n        }\n        this.sessions = 0\n    }\n    componentDidMount() {\n        // this.setState(sessions:this.props.completedSessions)\n        console.log(\"in component did mount\")\n\n    }\n    handleSessionChange = (event) => {\n        this.sessions = event.target.value\n        this.setState({ sessions: this.sessions })\n    }\n    handleChangeAddButton = () => {\n        let tempSessions = this.state.sessions\n        tempSessions = ++tempSessions\n        this.setState({ sessions: tempSessions })\n\n    }\n    routeToClientList = async() => {\n        console.log(\"coming in route\", this.state)\n       \n        let session = {}\n        session.count = this.state.sessionCount\n        session.price = this.state.price\n        session.date = this.state.date\n        session.isPresent = this.state.isPresent\n        session.clientId = this.state.clientListDetails._id\n        session.description = this.state.description\n //MAKE AN API CALL TO SAVE THE SESSIONS CHANGE\n let response= await SessionActions.createSession(session)\nconsole.log(\"response\",response)\nif(response.status==200)\n{\n    this.setState({routeToList:true})\n}\n\n\n    }\n    redirectToClientList =async()=>{\n      this.setState({routeToList:true})\n    }\n    handleAttendanceSelect = (name, event) => {\n\n        this.setState({ attendanceStatus: event.target.value })\n\n        if (event.target.value == 'Present') {\n\n            let sessionCount = ++this.state.clientListDetails.sessionCount\n            this.setState({ isPresent: true })\n            this.setState({ sessionCount: sessionCount })\n        }\n\n    }\n    handlePrice = (event) => {\n        let price = Number(event.target.value)\n        this.setState({ price: price })\n    }\n    handleDescription = (event) => {\n        this.setState({ description: event.target.value })\n    }\n    render() {\n        console.log(\"this.props\", this.props)\n\n        return (\n            <React.Fragment>\n                {this.state.routeToList ? <Redirect\n                    to={{\n                        pathname: routes.clientsList\n                    }} /> :\n                    <WithAppShell title=\"Add Session\" showBackArrowIcon={true} onClickOfBackArrow={this.redirectToClientList}>\n                        <MuiGrid container style={{ padding: 8 }} spacing={3}>\n                            <MuiGrid item container style={{}} direction='column'>\n                                <MuiGrid item>\n                                    <MuiTypography>\n                                        Client Attendance\n                    </MuiTypography>\n\n                                </MuiGrid>\n\n                                <MuiGrid item container >\n                                    <MuiGrid item >\n                                        <MuiRadio onChange={(event) => { this.handleAttendanceSelect('Present', event) }} checked={this.state.attendanceStatus == 'Present'} style={{ color: 'green' }} value='Present' />\n                                    </MuiGrid>\n                                    <MuiGrid item style={{}}>\n                                        <MuiTypography style={{ paddingTop: 8 }}>\n                                            Present\n                    </MuiTypography>\n                                    </MuiGrid>\n                                </MuiGrid>\n                                <MuiGrid item container>\n                                    <MuiGrid item style={{}}>\n                                        <MuiRadio onChange={(event) => { this.handleAttendanceSelect('Absent', event) }} checked={this.state.attendanceStatus == 'Absent'} value='Absent' />\n                                    </MuiGrid>\n                                    <MuiGrid item style={{}}>\n                                        <MuiTypography style={{ paddingTop: 8 }}>\n                                            Absent\n                    </MuiTypography>\n                                    </MuiGrid>\n                                </MuiGrid>\n\n\n                            </MuiGrid>\n\n                            <MuiGrid item container direction='column'>\n                                <MuiGrid item>\n                                    <MuiTypography>\n                                        Date\n                    </MuiTypography>\n\n                                </MuiGrid>\n                                <MuiGrid item>\n                                    <MuiTypography>\n                                        {moment().format(\"D MM YYYY\")}\n                                    </MuiTypography>\n                                </MuiGrid>\n\n                            </MuiGrid>\n                            <MuiGrid item container direction='column'>\n                                <MuiGrid item>\n                                    <MuiTypography>\n                                        Price\n                    </MuiTypography>\n\n                                </MuiGrid>\n                                <MuiGrid item>\n                                    <MuiTextField id=\"standard-basic\" style={{ width: '100%' }} onChange={(event) => { this.handlePrice(event) }} />\n                                </MuiGrid>\n\n\n                            </MuiGrid>\n                            <MuiGrid item container direction='column'>\n                                <MuiGrid item>\n                                    <MuiTypography>\n                                        Session description\n                        </MuiTypography>\n                                </MuiGrid>\n                                <MuiGrid item>\n                                    <MuiTextField\n                                        onChange={(event) => { this.handleDescription(event) }}\n                                        style={{ width: '100%' }}\n                                        id=\"outlined-textarea\"\n\n                                        multiline\n                                        rows={7}\n                                        variant=\"outlined\"\n                                    />\n\n                                </MuiGrid>\n\n                            </MuiGrid>\n\n                            <MuiGrid item style={{ width: '100%' }}>\n                                <MuiButton size='large' variant=\"contained\" style={{ background: \"#4caf50\", width: '100%', color: \"white\" }} onClick={this.routeToClientList}>\n                                    SAVE\n                       </MuiButton>\n                            </MuiGrid>\n                        </MuiGrid>\n                    </WithAppShell>\n                }\n            </React.Fragment>\n\n        )\n    }\n\n}\n\n\nexport default AddSessionComponent"]},"metadata":{},"sourceType":"module"}